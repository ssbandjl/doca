/*
 * Copyright (c) 2023, NVIDIA CORPORATION & AFFILIATES. All rights reserved.
 *
 * This software product is a proprietary product of NVIDIA CORPORATION &
 * AFFILIATES (the "Company") and all right, title, and interest in and to the
 * software product, including all associated intellectual property rights, are
 * and shall remain exclusively with the Company.
 *
 * This software product is governed by the End User License Agreement
 * provided with the software product.
 */

#ifndef VIRTNET_DPA_DBG_H
#define VIRTNET_DPA_DBG_H

enum {
	/* cpu cycle counters shared by inline mode and dual hart mode */
	VIRTNET_LAT_TX_TOTAL,
	VIRTNET_LAT_TX_PRE,
	VIRTNET_LAT_TX_GET_PENDING_DESC,
	VIRTNET_LAT_TX_PROCESS_FAST,
	VIRTNET_LAT_TX_PROCESS,
	VIRTNET_LAT_TX_COMMON_MAX_CYC_CNT,

	/* cpu cycle counters for tx inline mode*/
	VIRTNET_LAT_TX_INLINE_MODE_CNT = VIRTNET_LAT_TX_COMMON_MAX_CYC_CNT,
	VIRTNET_LAT_TX_AVAIL_FETCH_UPDATE = VIRTNET_LAT_TX_INLINE_MODE_CNT,
	VIRTNET_LAT_TX_DES_FETCH_WALK,
	VIRTNET_LAT_TX_MPWQE_CHECK,
	VIRTNET_LAT_TX_INLINE_MODE_MAX_CYC_CNT,

	/* cpu cycle counters for tx dual hart mode*/
	VIRTNET_LAT_TX_DUAL_HART_MODE_CYC_CNT
		= VIRTNET_LAT_TX_INLINE_MODE_MAX_CYC_CNT,
	VIRTNET_LAT_TX_FETCH_AVAIL_RING_DESC_TABLE
		= VIRTNET_LAT_TX_DUAL_HART_MODE_CYC_CNT,
	VIRTNET_LAT_TX_GET_CUR_BATCH_MPWQE_CHECK,
	VIRTNET_LAT_TX_DUAL_HART_MODE_MAX_CYC_CNT,
	VIRTNET_LAT_TX_MAX_CYC_CNT = VIRTNET_LAT_TX_DUAL_HART_MODE_MAX_CYC_CNT,
};

enum {
	/* cpu cycle counters for rx nw handler*/
	VIRTNET_LAT_RX_NW_CYC_CNT,
	VIRTNET_LAT_RX_NW_TOTAL = VIRTNET_LAT_RX_NW_CYC_CNT,
	VIRTNET_LAT_RX_NW_PRE,
	VIRTNET_LAT_RX_CQE_GET,
	VIRTNET_LAT_RX_SET_USED_IDX_SEND_MSIX,
	VIRTNET_LAT_RX_NW_MAX_CYC_CNT,

	/* cpu cycle counters for rx db handler*/
	VIRTNET_LAT_RX_DB_CYC_CNT = VIRTNET_LAT_RX_NW_MAX_CYC_CNT,
	VIRTNET_LAT_RX_DB_TOTAL = VIRTNET_LAT_RX_DB_CYC_CNT,
	VIRTNET_LAT_RX_PROCESS,
	VIRTNET_LAT_RX_DB_MAX_CYC_CNT,
	VIRTNET_LAT_RX_MAX_CYC_CNT = VIRTNET_LAT_RX_DB_MAX_CYC_CNT,
};

enum {
	VIRTNET_LAT_TX_INLINE_MODE,
	VIRTNET_LAT_TX_DUAL_HART_MODE,
	VIRTNET_LAT_TX_DMA_Q_AVAILABLE,
	VIRTNET_LAT_TX_WINDOW_ACCESS,
	VIRTNET_LAT_TX_IS_CHAIN,
	VIRTNET_LAT_TX_HAS_PENDING_WQE,
	VIRTNET_LAT_TX_DPA_PROCESS_TX_LSO,
	VIRTNET_LAT_TX_DPA_PROCESS_TX_NON_LSO,
	VIRTNET_LAT_TX_DPA_PROCESS_TX_FAST,
	VIRTNET_LAT_TX_DPA_PROCESS_TX,
	VIRTNET_LAT_TX_MAX_INVOKE_CNT,
};

enum {
	/* invoke counters for rx nw handler*/
	VIRTNET_LAT_RX_NW_INVOKE_CNT,
	VIRTNET_LAT_RX_NW_INVOKE = VIRTNET_LAT_RX_NW_INVOKE_CNT,
	VIRTNET_LAT_RX_NW_MAX_INVOKE_CNT,
	VIRTNET_LAT_RX_DB_INVOKE_CNT = VIRTNET_LAT_RX_NW_MAX_INVOKE_CNT,
	VIRTNET_LAT_RX_DB_INVOKE = VIRTNET_LAT_RX_DB_INVOKE_CNT,

	/* invoke counters for rx db handler*/
	VIRTNET_LAT_RX_DB_INLINE_MODE,
	VIRTNET_LAT_RX_DB_DUAL_HART_MODE,
	VIRTNET_LAT_RX_DB_HAS_PENDING_WQE,
	VIRTNET_LAT_RX_DB_MAX_INVOKE_CNT,
	VIRTNET_LAT_RX_MAX_INVOKE_CNT = VIRTNET_LAT_RX_DB_MAX_INVOKE_CNT,
};

enum {
	VIRTNET_LAT_TX_AVG_NDESCS,
	VIRTNET_LAT_TX_AVG_PENDING_DESC,
	VIRTNET_LAT_TX_AVG_CURRENT_BATCH,
	VIRTNET_LAT_TX_AVG_REMAINING_DESC,
	VIRTNET_LAT_TX_MAX_BATCH_CNT,
};

enum {
	VIRTNET_LAT_RX_NW_AVG_ITER_NUM_CQE,
	VIRTNET_LAT_RX_NW_AVG_REMAINING_DESC,
	VIRTNET_LAT_RX_NW_MAX_BATCH_CNT,
	VIRTNET_LAT_RX_DB_BATCH_CNT = VIRTNET_LAT_RX_NW_MAX_BATCH_CNT,
	VIRTNET_LAT_RX_DB_AVG_PRI_NUM_DESC_INLINE = VIRTNET_LAT_RX_DB_BATCH_CNT,
	VIRTNET_LAT_RX_DB_AVG_PRI_NUM_DESC_DUAL_HART,
	VIRTNET_LAT_RX_MAX_BATCH_CNT,
};

struct virtnet_dpa_batch {
	uint32_t events;
	uint64_t total_value;
};

struct virtnet_dpa_cycle_counter {
	uint32_t cycles;
	uint32_t events;
	uint64_t total_cycles;
};

/* LAT_MAX_CYC_CNT should more than VIRTNET_LAT_TX_MAX_CYC_CNT and
 * VIRTNET_LAT_RX_MAX_CYC_CNT.
 * LAT_MAX_INVOKE_CNT should more than VIRTNET_LAT_TX_MAX_INVOKE_CNT
 * and VIRTNET_LAT_RX_MAX_INVOKE_CNT.
 * LAT_MAX_BATCH_CNT should more than VIRTNET_LAT_TX_MAX_BATCH_CNT
 * and VIRTNET_LAT_RX_MAX_BATCH_CNT.
 */
#define LAT_MAX_CYC_CNT		10
#define LAT_MAX_INVOKE_CNT	16
#define LAT_MAX_BATCH_CNT	8
struct virtnet_dpa_latency_stats {
	struct virtnet_dpa_cycle_counter cycle_counter[LAT_MAX_CYC_CNT];
	uint64_t invoke_counter[LAT_MAX_INVOKE_CNT];
	struct virtnet_dpa_batch batch_value[LAT_MAX_BATCH_CNT];
};

#endif
